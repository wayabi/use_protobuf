// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: a.proto

#ifndef PROTOBUF_a_2eproto__INCLUDED
#define PROTOBUF_a_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_a_2eproto();
void protobuf_AssignDesc_a_2eproto();
void protobuf_ShutdownFile_a_2eproto();

class Person;
class Person_Pos;

// ===================================================================

class Person_Pos : public ::google::protobuf::Message {
 public:
  Person_Pos();
  virtual ~Person_Pos();

  Person_Pos(const Person_Pos& from);

  inline Person_Pos& operator=(const Person_Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person_Pos& default_instance();

  void Swap(Person_Pos* other);

  // implements Message ----------------------------------------------

  Person_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person_Pos& from);
  void MergeFrom(const Person_Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.Person.Pos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_a_2eproto();
  friend void protobuf_AssignDesc_a_2eproto();
  friend void protobuf_ShutdownFile_a_2eproto();

  void InitAsDefaultInstance();
  static Person_Pos* default_instance_;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  Person* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Person_Pos Pos;

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string email = 2;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 2;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint64 aa = 3;
  inline bool has_aa() const;
  inline void clear_aa();
  static const int kAaFieldNumber = 3;
  inline ::google::protobuf::uint64 aa() const;
  inline void set_aa(::google::protobuf::uint64 value);

  // optional bytes blob = 4;
  inline bool has_blob() const;
  inline void clear_blob();
  static const int kBlobFieldNumber = 4;
  inline const ::std::string& blob() const;
  inline void set_blob(const ::std::string& value);
  inline void set_blob(const char* value);
  inline void set_blob(const void* value, size_t size);
  inline ::std::string* mutable_blob();
  inline ::std::string* release_blob();
  inline void set_allocated_blob(::std::string* blob);

  // repeated .message.Person.Pos pos = 7;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 7;
  inline const ::message::Person_Pos& pos(int index) const;
  inline ::message::Person_Pos* mutable_pos(int index);
  inline ::message::Person_Pos* add_pos();
  inline const ::google::protobuf::RepeatedPtrField< ::message::Person_Pos >&
      pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::Person_Pos >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:message.Person)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_aa();
  inline void clear_has_aa();
  inline void set_has_blob();
  inline void clear_has_blob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* email_;
  ::google::protobuf::uint64 aa_;
  ::std::string* blob_;
  ::google::protobuf::RepeatedPtrField< ::message::Person_Pos > pos_;
  friend void  protobuf_AddDesc_a_2eproto();
  friend void protobuf_AssignDesc_a_2eproto();
  friend void protobuf_ShutdownFile_a_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// ===================================================================


// ===================================================================

// Person_Pos

// required int32 x = 5;
inline bool Person_Pos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person_Pos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person_Pos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person_Pos::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Person_Pos::x() const {
  // @@protoc_insertion_point(field_get:message.Person.Pos.x)
  return x_;
}
inline void Person_Pos::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:message.Person.Pos.x)
}

// required int32 y = 6;
inline bool Person_Pos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person_Pos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person_Pos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person_Pos::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Person_Pos::y() const {
  // @@protoc_insertion_point(field_get:message.Person.Pos.y)
  return y_;
}
inline void Person_Pos::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:message.Person.Pos.y)
}

// -------------------------------------------------------------------

// Person

// required string name = 1;
inline bool Person::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:message.Person.name)
  return *name_;
}
inline void Person::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:message.Person.name)
}
inline void Person::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:message.Person.name)
}
inline void Person::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message.Person.name)
}
inline ::std::string* Person::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:message.Person.name)
  return name_;
}
inline ::std::string* Person::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:message.Person.name)
}

// optional string email = 2;
inline bool Person::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& Person::email() const {
  // @@protoc_insertion_point(field_get:message.Person.email)
  return *email_;
}
inline void Person::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:message.Person.email)
}
inline void Person::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:message.Person.email)
}
inline void Person::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message.Person.email)
}
inline ::std::string* Person::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:message.Person.email)
  return email_;
}
inline ::std::string* Person::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:message.Person.email)
}

// optional uint64 aa = 3;
inline bool Person::has_aa() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person::set_has_aa() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Person::clear_has_aa() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Person::clear_aa() {
  aa_ = GOOGLE_ULONGLONG(0);
  clear_has_aa();
}
inline ::google::protobuf::uint64 Person::aa() const {
  // @@protoc_insertion_point(field_get:message.Person.aa)
  return aa_;
}
inline void Person::set_aa(::google::protobuf::uint64 value) {
  set_has_aa();
  aa_ = value;
  // @@protoc_insertion_point(field_set:message.Person.aa)
}

// optional bytes blob = 4;
inline bool Person::has_blob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Person::set_has_blob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Person::clear_has_blob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Person::clear_blob() {
  if (blob_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    blob_->clear();
  }
  clear_has_blob();
}
inline const ::std::string& Person::blob() const {
  // @@protoc_insertion_point(field_get:message.Person.blob)
  return *blob_;
}
inline void Person::set_blob(const ::std::string& value) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    blob_ = new ::std::string;
  }
  blob_->assign(value);
  // @@protoc_insertion_point(field_set:message.Person.blob)
}
inline void Person::set_blob(const char* value) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    blob_ = new ::std::string;
  }
  blob_->assign(value);
  // @@protoc_insertion_point(field_set_char:message.Person.blob)
}
inline void Person::set_blob(const void* value, size_t size) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    blob_ = new ::std::string;
  }
  blob_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message.Person.blob)
}
inline ::std::string* Person::mutable_blob() {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    blob_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:message.Person.blob)
  return blob_;
}
inline ::std::string* Person::release_blob() {
  clear_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = blob_;
    blob_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_blob(::std::string* blob) {
  if (blob_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete blob_;
  }
  if (blob) {
    set_has_blob();
    blob_ = blob;
  } else {
    clear_has_blob();
    blob_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:message.Person.blob)
}

// repeated .message.Person.Pos pos = 7;
inline int Person::pos_size() const {
  return pos_.size();
}
inline void Person::clear_pos() {
  pos_.Clear();
}
inline const ::message::Person_Pos& Person::pos(int index) const {
  // @@protoc_insertion_point(field_get:message.Person.pos)
  return pos_.Get(index);
}
inline ::message::Person_Pos* Person::mutable_pos(int index) {
  // @@protoc_insertion_point(field_mutable:message.Person.pos)
  return pos_.Mutable(index);
}
inline ::message::Person_Pos* Person::add_pos() {
  // @@protoc_insertion_point(field_add:message.Person.pos)
  return pos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::Person_Pos >&
Person::pos() const {
  // @@protoc_insertion_point(field_list:message.Person.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::Person_Pos >*
Person::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:message.Person.pos)
  return &pos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_a_2eproto__INCLUDED
